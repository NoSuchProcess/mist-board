#summary This pages explains how to compile the firmware
#sidebar CoreDocTOC

= Prerequisites =

The firmware is written in C. Thus a matching C compiler is needed. The current firmware setup expects a matching version of the gnu compiler collection (GCC) to be installed. 

== Installing GCC on Windows ==

Here is an easy way (but not the most efficient):
  # Download and install the _gcc-arm-none-eabi_ package, version 4.8, from [http://launchpad.net/gcc-arm-embedded/+download this page]. 
  # Make sure arm-none-eabi-gcc.exe is in your path (from a new cmd.exe window)
  # Download the [https://github.com/xbmc/xbmc master branch] to your PC
  # Go under \project\BuildDependencies and run _DownloadBuildDeps.bat_
  # From the same folder run _DownloadMingwBuildEnv.bat_
  # When done go under the \msys\ folder and run _msys.bat_

If everything went well you will get a command prompt. Try typing these two commands. If all went well you should see the messages below:
  * *make* (should say "No targets specified...")
  * *arm-none-eabi-gcc*  (should say "arm-none-eabi-gcc.exe: fatal error...")

Then you are ready to compile the firmware:
  # From the msys.bat command prompt open the MiST /firmware/ folder
  # Edit 'Makefile' to remove the Linux path for arm-none-eabi
  # Type "make" and enter

After a few seconds you should see a freshly created *firmware.upg* ready for use.

For (2), if the arm-none-eabi-gcc.exe is in your path it is enough to set:
{{{
BASE ?= arm-none-eabi
}}}



For more details and other examples you can refere to this page: [http://ws0.org/compiling-the-minimig-core-for-the-mist-fpga-board-on-windows/ How to compile the firmware under Windows]



== Installing GCC on Linux ==

Installation is described in [http://retroramblings.net/?p=315 this blog posting]. A [http://mist-board.googlecode.com/svn/trunk/tools/install_arm-none-eabi-gcc.sh shell script] is available to automate the setup.


= Compiling the source code =

The firmware source code is available from the [http://code.google.com/p/mist-board/source/checkout MIST svn repository].

Once the compiler is installed a simple `make` in the firmware subdirectory will build the latest firmware.


= Installing the firmware =

Three files are generated during compilation:

  * *firmware.bin* is the raw binary of the firmware. This can be uploaded to the MIST board using special flashers
  * *firmware.hex* is the same firmware in intel hex format as required by some uploaders
  * *firmware.upg* is the same firmware in a format suited for self-update via the on-screen-display (OSD)

For more details on firmware installation read HowToInstallTheFirmware